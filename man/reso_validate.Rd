% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reso_validate.R
\name{reso_validate}
\alias{reso_validate}
\title{Validate a \code{reso} expression.}
\usage{
reso_validate(file, soft = FALSE)
}
\arguments{
\item{file}{string. either a path to a file or a \code{reso} expression as a string.}

\item{soft}{logical. Should \code{reso_validate()} return FALSE instead of failing on error
if a file is invalid? FALSE by default.}
}
\value{
TRUE if the file is a valid \code{reso} expression, FALSE otherwise.
}
\description{
Tests whether a string or file is an R expression. Fails with error if the string or file
is invalid and soft=FALSE, returns FALSE is the file is invalid while soft=TRUE.
}
\examples{
\dontrun{
reso_validate("assign(a, b)") # these two fail with error
reso_validate("x(s(d(p()))) + a")
}

reso_validate("assign(a, b)", soft = TRUE) #is invalid, but
# soft=TRUE prevents error and the function returns FALSE instead
reso_validate("x(s(d(p()[0])))") # these two are valid code
reso_validate("x(s(d(p()[0])))(0,x(s(d(p()[0])))(!0,0[0]))")
}
